{"mappings":"ACEA,IAAM,EAAuB,SAC3B,CAAA,CACA,CAAA,CACA,CAAA,CACA,CAAA,CACA,CALF,EAQE,IAAM,EAA0B,EAAuB,EAKjD,EAAoB,AAFxB,EAAwB,EAJA,AAAC,CAAA,EAAkB,CAAA,EAAwB,EAE7C,EAAyB,SAMjD,AAAI,EAAoB,EACf,EAGF,EAAoB,EAAI,EAAoB,CACrD,EAEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,aAAa,CAAC,WAChC,EAAa,EAAK,qBAAqB,GAEzC,IAAS,EAAE,MAAM,GACnB,EAAO,KAAK,CAAC,GAAG,CAAI,GAMlB,MAAA,CANoB,EACpB,EAAW,MAAM,CACjB,EAAW,CAAC,CACZ,EAAO,YAAY,CACnB,EAAK,YAAY,CACjB,EAAE,OAAO,EACT,MAEF,EAAO,KAAK,CAAC,IAAI,CAAI,GAMnB,MAAA,CANqB,EACrB,EAAW,KAAK,CAChB,EAAW,CAAC,CACZ,EAAO,WAAW,CAClB,EAAK,WAAW,CAChB,EAAE,OAAO,EACT,MAEN","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar getNewPositionSpider = function(clientWallSizes, clientWallCordinates, sizesSpiderOnlyContent, sizesWallOnlyContent, eventClientCordinates) {\n    var borderWallOneSide = (clientWallSizes - sizesWallOnlyContent) / 2;\n    var maxContentNeedForSpider = sizesWallOnlyContent - sizesSpiderOnlyContent;\n    var halfSizesSpider = sizesSpiderOnlyContent / 2;\n    var relativePositionOnwall = eventClientCordinates - clientWallCordinates - borderWallOneSide;\n    var newPositionSpider = relativePositionOnwall - halfSizesSpider;\n    if (newPositionSpider > maxContentNeedForSpider) return maxContentNeedForSpider;\n    return newPositionSpider > 0 ? newPositionSpider : 0;\n};\ndocument.addEventListener(\"click\", function(e) {\n    var wall = document.querySelector(\".wall\");\n    var spider = document.querySelector(\".spider\");\n    var clientWall = wall.getBoundingClientRect();\n    if (wall === e.target) {\n        spider.style.top = \"\".concat(getNewPositionSpider(clientWall.height, clientWall.y, spider.clientHeight, wall.clientHeight, e.clientY), \"px\");\n        spider.style.left = \"\".concat(getNewPositionSpider(clientWall.width, clientWall.x, spider.clientWidth, wall.clientWidth, e.clientX), \"px\");\n    }\n});\n\n//# sourceMappingURL=index.3ba65a1b.js.map\n","'use strict';\n\nconst getNewPositionSpider = (\n  clientWallSizes,\n  clientWallCordinates,\n  sizesSpiderOnlyContent,\n  sizesWallOnlyContent,\n  eventClientCordinates,\n) => {\n  const borderWallOneSide = (clientWallSizes - sizesWallOnlyContent) / 2;\n  const maxContentNeedForSpider = sizesWallOnlyContent - sizesSpiderOnlyContent;\n  const halfSizesSpider = sizesSpiderOnlyContent / 2;\n  const relativePositionOnwall =\n    eventClientCordinates - clientWallCordinates - borderWallOneSide;\n\n  const newPositionSpider = relativePositionOnwall - halfSizesSpider;\n\n  if (newPositionSpider > maxContentNeedForSpider) {\n    return maxContentNeedForSpider;\n  }\n\n  return newPositionSpider > 0 ? newPositionSpider : 0;\n};\n\ndocument.addEventListener('click', (e) => {\n  const wall = document.querySelector('.wall');\n  const spider = document.querySelector('.spider');\n  const clientWall = wall.getBoundingClientRect();\n\n  if (wall === e.target) {\n    spider.style.top = `${getNewPositionSpider(\n      clientWall.height,\n      clientWall.y,\n      spider.clientHeight,\n      wall.clientHeight,\n      e.clientY,\n    )}px`;\n\n    spider.style.left = `${getNewPositionSpider(\n      clientWall.width,\n      clientWall.x,\n      spider.clientWidth,\n      wall.clientWidth,\n      e.clientX,\n    )}px`;\n  }\n});\n"],"names":["getNewPositionSpider","clientWallSizes","clientWallCordinates","sizesSpiderOnlyContent","sizesWallOnlyContent","eventClientCordinates","maxContentNeedForSpider","newPositionSpider","relativePositionOnwall","document","addEventListener","e","wall","querySelector","spider","clientWall","getBoundingClientRect","target","style","top","concat","height","y","clientHeight","clientY","left","width","x","clientWidth","clientX"],"version":3,"file":"index.3ba65a1b.js.map"}